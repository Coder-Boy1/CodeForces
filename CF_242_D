// Starting from 0 degree and 0 value vertex.
// Included that in answer. If now at some place in bfs deg of vertex eual to a[v] then push it to the queue and continue.


#include <bits/stdc++.h>

using namespace std;

#define ll long long

#define mod 1000000007

ll gcd(ll aa,ll bb) { if(aa==0) return bb; return(bb%aa,aa); }

vector < int > a[100005];

int main() 
{
    ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
   
    int n,m,t1,t2;
    cin>>n>>m;
    for(int i=0;i<m;i++)
    {
        cin>>t1>>t2;
        a[t1].push_back(t2);
        a[t2].push_back(t1);
    }
    vector < int > vis(n+1,0),val(n+1),deg(n+1,0);
    
    queue < int > me;
    
    for(int i=1;i<=n;i++)
    {
        cin>>val[i];
        if(val[i]==0)
            me.push(i);
    }
    int flag=0;
    
    vector < int > ans;
    
    while(!me.empty())
    {
        int t=me.front();
        me.pop();
        if(vis[t]==1 && deg[t]==val[t])
        {
            flag=1;
            break;
        }
        deg[t]++;
        vis[t]=1;
        ans.push_back(t);
        for(int i=0;i<a[t].size();i++)
        {
            deg[a[t][i]]++;
            if(deg[a[t][i]]==val[a[t][i]])
                me.push(a[t][i]);
        }
    }
    
    
    if(flag==1)
    {
        cout<<"-1"<<endl;
    }
    else
    {
        cout<<ans.size()<<endl;
        for(int i=0;i<ans.size();i++)
            cout<<ans[i]<<" ";
        cout<<endl;
    }
    return 0;
}
