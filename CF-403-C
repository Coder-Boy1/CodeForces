#include <bits/stdc++.h>

using namespace std;

#define int long long

int matrix[2005][2005];
int pos[2005][2005];
int vis[2005];

vector < int > a[2005];
vector < int > b[2005];
void dfs(int n, int p)
{
        vis[n]=1;
        pos[p][n]=1;
        for(int i=0;i<a[n].size();i++)
        {
                if(vis[a[n][i]]==0)
                {
                        dfs(a[n][i],p);
                }
        }
}
void dfs1(int n, int p)
{
        vis[n]=1;
        pos[n][p]=1;
        for(int i=0;i<b[n].size();i++)
        {
                if(vis[b[n][i]]==0)
                {
                        dfs1(b[n][i],p);
                }
        }
}

void foo()
{
        for(int i=0;i<=2000;i++)
                vis[i]=0;
}

int32_t main()
{
        ios_base::sync_with_stdio(false);
        cin.tie(NULL);
        int n;
        cin>>n;

        for(int i=1;i<=n;i++)
        {
                for(int j=1;j<=n;j++)
                {
                        cin>>matrix[i][j];
                        if(matrix[i][j]!=0)
                        {
                                a[i].push_back(j);
                                b[j].push_back(i);
                        }
                }
        }

        
        dfs(1,1);
        foo();
        dfs1(1,1);
        for(int i=1;i<=n;i++)
        {
                int ans=0;
                for(int j=1;j<=n;j++)
                {
                        ans+=pos[i][j];
                        ans+=pos[j][i];
                }
                if(ans==2*n)
                {
                        cout<<"YES"<<endl;
                        return 0;
                }
        }
        cout<<"NO"<<endl;

        return 0;
}
