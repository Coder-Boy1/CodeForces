// Binary search on answer to check if for given n arrangement is possible or not. Every step increase number of boxes by 4.
// When total>N break. Now all box can be settled.

#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
using namespace std;

#define ll long long 

int main()
{
    /* Enter your code here. Read input from STDIN. Print output to STDOUT */ 
    ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
  
    int n;
    cin>>n;
    vector < pair < ll , ll > > a(n);
    ll ss=0;
    for(int i=0;i<n;i++)
    {
        cin>>a[i].first>>a[i].second;
        ss+=a[i].second;
    }
    
    sort(a.begin(),a.end());
    
    ll l=1,r=100000000000000;
    ll ans=1000000000000;
    
    while(l<=r)
    {
        
        ll m=(l+r)/2;
        ll cur=4;
        ll s=m-1;
        ll flag=0;
        for(int i=n-1;i>=0;i--)
        {  
            
            while(1)
            {
                if((a[i].first==s && a[i].second>cur) || a[i].first>s)
                {
                    flag=1;
                    break;
                }
                if(cur>ss)
                break;
                if(a[i].first==s)
                break;
                cur*=4;
                s--;
            }

        }
        if(flag==0)
        {
            ans=min(ans,m);
            r=m-1;
        }
        else
        {
            l=m+1;
        }
        
    }
    cout<<ans<<endl;
    
    
    return 0;
}
