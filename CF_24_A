#include <bits/stdc++.h>

using namespace std;

#define ll long long

#define mod 998244353

ll gcd(ll aa,ll bb) { if(aa==0) return bb; return(bb%aa,aa); }

vector < int > a[1005];

int cost[1005][1005];

int vis[1005];

int ans=0;

void dfs(int n)
{
    vis[n]=1;
 //   cout<<n<<endl;
    for(int i=0;i<a[n].size();i++)
    {
        if(vis[a[n][i]]==0)
        {
            ans+=cost[n][a[n][i]];
            dfs(a[n][i]);
        }
        else if(a[n][i]==1 && n!=a[1][0])
        {
         //   cout<<n<<" hi"<<endl;
            ans+=cost[n][a[n][i]];
        }
    }

}


int vis1[1005];

int ans1=0;

void dfs1(int n)
{
    vis1[n]=1;
    
    for(int i=0;i<a[n].size();i++)
    {
        if(vis1[a[n][i]]==0)
        {
            dfs1(a[n][i]);
            ans1+=cost[n][a[n][i]];
        }
         else if(a[n][i]==1 && n!=a[1][1])
        {
            ans1+=cost[n][a[n][i]];
        }
    }
}



int main()
{
    ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
   
    int n;
    cin>>n;
    int x,y,w;
    
    for(int i=0;i<n;i++)
    {
        cin>>x>>y>>w;
        a[x].push_back(y);
        a[y].push_back(x);
        cost[x][y]=0;
        cost[y][x]=w;
    }
    
    vis[1]=1;
    ans=cost[1][a[1][0]];
    vis[a[1][0]]=1;
    dfs(a[1][0]);
    
    vis1[1]=1;
    ans1=cost[1][a[1][1]];
    vis1[a[1][1]]=1;
    dfs1(a[1][1]);
    
  
    
    ans=min(ans,ans1);
    cout<<ans<<endl;
    
    
    
    return 0;
}
